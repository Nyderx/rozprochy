// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hospital.proto

package lab4.gen;

/**
 * Protobuf type {@code DoctorQuery}
 */
public  final class DoctorQuery extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:DoctorQuery)
    DoctorQueryOrBuilder {
  // Use DoctorQuery.newBuilder() to construct.
  private DoctorQuery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DoctorQuery() {
    patient_ = "";
    rowsRequirements_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private DoctorQuery(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            patient_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              rowsRequirements_ = new java.util.ArrayList<lab4.gen.RowQuery>();
              mutable_bitField0_ |= 0x00000002;
            }
            rowsRequirements_.add(
                input.readMessage(lab4.gen.RowQuery.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        rowsRequirements_ = java.util.Collections.unmodifiableList(rowsRequirements_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return lab4.gen.Hospital.internal_static_DoctorQuery_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return lab4.gen.Hospital.internal_static_DoctorQuery_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            lab4.gen.DoctorQuery.class, lab4.gen.DoctorQuery.Builder.class);
  }

  private int bitField0_;
  public static final int PATIENT_FIELD_NUMBER = 1;
  private volatile java.lang.Object patient_;
  /**
   * <code>string patient = 1;</code>
   */
  public java.lang.String getPatient() {
    java.lang.Object ref = patient_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      patient_ = s;
      return s;
    }
  }
  /**
   * <code>string patient = 1;</code>
   */
  public com.google.protobuf.ByteString
      getPatientBytes() {
    java.lang.Object ref = patient_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      patient_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ROWSREQUIREMENTS_FIELD_NUMBER = 2;
  private java.util.List<lab4.gen.RowQuery> rowsRequirements_;
  /**
   * <code>repeated .RowQuery rowsRequirements = 2;</code>
   */
  public java.util.List<lab4.gen.RowQuery> getRowsRequirementsList() {
    return rowsRequirements_;
  }
  /**
   * <code>repeated .RowQuery rowsRequirements = 2;</code>
   */
  public java.util.List<? extends lab4.gen.RowQueryOrBuilder> 
      getRowsRequirementsOrBuilderList() {
    return rowsRequirements_;
  }
  /**
   * <code>repeated .RowQuery rowsRequirements = 2;</code>
   */
  public int getRowsRequirementsCount() {
    return rowsRequirements_.size();
  }
  /**
   * <code>repeated .RowQuery rowsRequirements = 2;</code>
   */
  public lab4.gen.RowQuery getRowsRequirements(int index) {
    return rowsRequirements_.get(index);
  }
  /**
   * <code>repeated .RowQuery rowsRequirements = 2;</code>
   */
  public lab4.gen.RowQueryOrBuilder getRowsRequirementsOrBuilder(
      int index) {
    return rowsRequirements_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getPatientBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, patient_);
    }
    for (int i = 0; i < rowsRequirements_.size(); i++) {
      output.writeMessage(2, rowsRequirements_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getPatientBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, patient_);
    }
    for (int i = 0; i < rowsRequirements_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, rowsRequirements_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof lab4.gen.DoctorQuery)) {
      return super.equals(obj);
    }
    lab4.gen.DoctorQuery other = (lab4.gen.DoctorQuery) obj;

    boolean result = true;
    result = result && getPatient()
        .equals(other.getPatient());
    result = result && getRowsRequirementsList()
        .equals(other.getRowsRequirementsList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PATIENT_FIELD_NUMBER;
    hash = (53 * hash) + getPatient().hashCode();
    if (getRowsRequirementsCount() > 0) {
      hash = (37 * hash) + ROWSREQUIREMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getRowsRequirementsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static lab4.gen.DoctorQuery parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lab4.gen.DoctorQuery parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lab4.gen.DoctorQuery parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static lab4.gen.DoctorQuery parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static lab4.gen.DoctorQuery parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lab4.gen.DoctorQuery parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static lab4.gen.DoctorQuery parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static lab4.gen.DoctorQuery parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static lab4.gen.DoctorQuery parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static lab4.gen.DoctorQuery parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(lab4.gen.DoctorQuery prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code DoctorQuery}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:DoctorQuery)
      lab4.gen.DoctorQueryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return lab4.gen.Hospital.internal_static_DoctorQuery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return lab4.gen.Hospital.internal_static_DoctorQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              lab4.gen.DoctorQuery.class, lab4.gen.DoctorQuery.Builder.class);
    }

    // Construct using lab4.gen.DoctorQuery.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getRowsRequirementsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      patient_ = "";

      if (rowsRequirementsBuilder_ == null) {
        rowsRequirements_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        rowsRequirementsBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return lab4.gen.Hospital.internal_static_DoctorQuery_descriptor;
    }

    public lab4.gen.DoctorQuery getDefaultInstanceForType() {
      return lab4.gen.DoctorQuery.getDefaultInstance();
    }

    public lab4.gen.DoctorQuery build() {
      lab4.gen.DoctorQuery result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public lab4.gen.DoctorQuery buildPartial() {
      lab4.gen.DoctorQuery result = new lab4.gen.DoctorQuery(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.patient_ = patient_;
      if (rowsRequirementsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          rowsRequirements_ = java.util.Collections.unmodifiableList(rowsRequirements_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rowsRequirements_ = rowsRequirements_;
      } else {
        result.rowsRequirements_ = rowsRequirementsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof lab4.gen.DoctorQuery) {
        return mergeFrom((lab4.gen.DoctorQuery)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(lab4.gen.DoctorQuery other) {
      if (other == lab4.gen.DoctorQuery.getDefaultInstance()) return this;
      if (!other.getPatient().isEmpty()) {
        patient_ = other.patient_;
        onChanged();
      }
      if (rowsRequirementsBuilder_ == null) {
        if (!other.rowsRequirements_.isEmpty()) {
          if (rowsRequirements_.isEmpty()) {
            rowsRequirements_ = other.rowsRequirements_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRowsRequirementsIsMutable();
            rowsRequirements_.addAll(other.rowsRequirements_);
          }
          onChanged();
        }
      } else {
        if (!other.rowsRequirements_.isEmpty()) {
          if (rowsRequirementsBuilder_.isEmpty()) {
            rowsRequirementsBuilder_.dispose();
            rowsRequirementsBuilder_ = null;
            rowsRequirements_ = other.rowsRequirements_;
            bitField0_ = (bitField0_ & ~0x00000002);
            rowsRequirementsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRowsRequirementsFieldBuilder() : null;
          } else {
            rowsRequirementsBuilder_.addAllMessages(other.rowsRequirements_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      lab4.gen.DoctorQuery parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (lab4.gen.DoctorQuery) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object patient_ = "";
    /**
     * <code>string patient = 1;</code>
     */
    public java.lang.String getPatient() {
      java.lang.Object ref = patient_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        patient_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string patient = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPatientBytes() {
      java.lang.Object ref = patient_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        patient_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string patient = 1;</code>
     */
    public Builder setPatient(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      patient_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string patient = 1;</code>
     */
    public Builder clearPatient() {
      
      patient_ = getDefaultInstance().getPatient();
      onChanged();
      return this;
    }
    /**
     * <code>string patient = 1;</code>
     */
    public Builder setPatientBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      patient_ = value;
      onChanged();
      return this;
    }

    private java.util.List<lab4.gen.RowQuery> rowsRequirements_ =
      java.util.Collections.emptyList();
    private void ensureRowsRequirementsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        rowsRequirements_ = new java.util.ArrayList<lab4.gen.RowQuery>(rowsRequirements_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        lab4.gen.RowQuery, lab4.gen.RowQuery.Builder, lab4.gen.RowQueryOrBuilder> rowsRequirementsBuilder_;

    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public java.util.List<lab4.gen.RowQuery> getRowsRequirementsList() {
      if (rowsRequirementsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(rowsRequirements_);
      } else {
        return rowsRequirementsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public int getRowsRequirementsCount() {
      if (rowsRequirementsBuilder_ == null) {
        return rowsRequirements_.size();
      } else {
        return rowsRequirementsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public lab4.gen.RowQuery getRowsRequirements(int index) {
      if (rowsRequirementsBuilder_ == null) {
        return rowsRequirements_.get(index);
      } else {
        return rowsRequirementsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public Builder setRowsRequirements(
        int index, lab4.gen.RowQuery value) {
      if (rowsRequirementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRowsRequirementsIsMutable();
        rowsRequirements_.set(index, value);
        onChanged();
      } else {
        rowsRequirementsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public Builder setRowsRequirements(
        int index, lab4.gen.RowQuery.Builder builderForValue) {
      if (rowsRequirementsBuilder_ == null) {
        ensureRowsRequirementsIsMutable();
        rowsRequirements_.set(index, builderForValue.build());
        onChanged();
      } else {
        rowsRequirementsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public Builder addRowsRequirements(lab4.gen.RowQuery value) {
      if (rowsRequirementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRowsRequirementsIsMutable();
        rowsRequirements_.add(value);
        onChanged();
      } else {
        rowsRequirementsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public Builder addRowsRequirements(
        int index, lab4.gen.RowQuery value) {
      if (rowsRequirementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRowsRequirementsIsMutable();
        rowsRequirements_.add(index, value);
        onChanged();
      } else {
        rowsRequirementsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public Builder addRowsRequirements(
        lab4.gen.RowQuery.Builder builderForValue) {
      if (rowsRequirementsBuilder_ == null) {
        ensureRowsRequirementsIsMutable();
        rowsRequirements_.add(builderForValue.build());
        onChanged();
      } else {
        rowsRequirementsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public Builder addRowsRequirements(
        int index, lab4.gen.RowQuery.Builder builderForValue) {
      if (rowsRequirementsBuilder_ == null) {
        ensureRowsRequirementsIsMutable();
        rowsRequirements_.add(index, builderForValue.build());
        onChanged();
      } else {
        rowsRequirementsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public Builder addAllRowsRequirements(
        java.lang.Iterable<? extends lab4.gen.RowQuery> values) {
      if (rowsRequirementsBuilder_ == null) {
        ensureRowsRequirementsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rowsRequirements_);
        onChanged();
      } else {
        rowsRequirementsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public Builder clearRowsRequirements() {
      if (rowsRequirementsBuilder_ == null) {
        rowsRequirements_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        rowsRequirementsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public Builder removeRowsRequirements(int index) {
      if (rowsRequirementsBuilder_ == null) {
        ensureRowsRequirementsIsMutable();
        rowsRequirements_.remove(index);
        onChanged();
      } else {
        rowsRequirementsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public lab4.gen.RowQuery.Builder getRowsRequirementsBuilder(
        int index) {
      return getRowsRequirementsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public lab4.gen.RowQueryOrBuilder getRowsRequirementsOrBuilder(
        int index) {
      if (rowsRequirementsBuilder_ == null) {
        return rowsRequirements_.get(index);  } else {
        return rowsRequirementsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public java.util.List<? extends lab4.gen.RowQueryOrBuilder> 
         getRowsRequirementsOrBuilderList() {
      if (rowsRequirementsBuilder_ != null) {
        return rowsRequirementsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(rowsRequirements_);
      }
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public lab4.gen.RowQuery.Builder addRowsRequirementsBuilder() {
      return getRowsRequirementsFieldBuilder().addBuilder(
          lab4.gen.RowQuery.getDefaultInstance());
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public lab4.gen.RowQuery.Builder addRowsRequirementsBuilder(
        int index) {
      return getRowsRequirementsFieldBuilder().addBuilder(
          index, lab4.gen.RowQuery.getDefaultInstance());
    }
    /**
     * <code>repeated .RowQuery rowsRequirements = 2;</code>
     */
    public java.util.List<lab4.gen.RowQuery.Builder> 
         getRowsRequirementsBuilderList() {
      return getRowsRequirementsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        lab4.gen.RowQuery, lab4.gen.RowQuery.Builder, lab4.gen.RowQueryOrBuilder> 
        getRowsRequirementsFieldBuilder() {
      if (rowsRequirementsBuilder_ == null) {
        rowsRequirementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            lab4.gen.RowQuery, lab4.gen.RowQuery.Builder, lab4.gen.RowQueryOrBuilder>(
                rowsRequirements_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        rowsRequirements_ = null;
      }
      return rowsRequirementsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:DoctorQuery)
  }

  // @@protoc_insertion_point(class_scope:DoctorQuery)
  private static final lab4.gen.DoctorQuery DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new lab4.gen.DoctorQuery();
  }

  public static lab4.gen.DoctorQuery getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DoctorQuery>
      PARSER = new com.google.protobuf.AbstractParser<DoctorQuery>() {
    public DoctorQuery parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new DoctorQuery(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DoctorQuery> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DoctorQuery> getParserForType() {
    return PARSER;
  }

  public lab4.gen.DoctorQuery getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

